version: 2.1

orbs:
  gcp-cli: circleci/gcp-cli@1.8.4

restore_cache: &restore_cache
  restore_cache:
    keys:
      - app-cache-{{ checksum "build.sbt" }}
      - app-cache-v1


save_cache: &save_cache
  save_cache:
    key: app-cache-{{ checksum "build.sbt" }}
    paths:
      - target/resolution-cache
      - target/streams
      - project/target/resolution-cache
      - project/target/streams
      - ~/.sbt
      - ~/.ivy2/cache

jobs:
  unit-tests:
    working_directory: ~/cash-flow-service
    docker:
      - image: circleci/openjdk:8
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Unit Test
          command: sbt unit
      - *save_cache
  integration-tests:
    working_directory: ~/cash-flow-service
    docker:
      - image: circleci/openjdk:8
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Run Database Migrations
          command: sbt runDbMigrations
      - run:
          name: Integration Test
          command: sbt integration
  test-coverage:
    working_directory: ~/cash-flow-service
    docker:
      - image: circleci/openjdk:8
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Run Database Migrations
          command: sbt runDbMigrations
      - run:
          name: Test Coverage
          command: sbt coverage test
      - run:
          name: Report Coverage
          command: sbt coverageReport
  build-and-registry-container:
    working_directory: ~/cash-flow-service
    docker:
      - image: circleci/openjdk:8
    steps:
      - checkout
      - setup_remote_docker
      - gcp-cli/install
      - gcp-cli/initialize
      - run: |
          IMAGE_AND_TAG=gcr.io/fin2you/cash-flow-service:$CIRCLE_SHA1
          sbt dist
          unzip target/universal/cash-flow-service-1.0.zip -d .
          docker build -t $IMAGE_AND_TAG .
          gcloud --quiet auth configure-docker
          docker push $IMAGE_AND_TAG
  deploy-to-production:
    working_directory: ~/cash-flow-service
    docker:
      - image: circleci/openjdk:8
    steps:
      - gcp-cli/install
      - gcp-cli/initialize
      - run: |
          gcloud --quiet components install kubectl
          gcloud --quiet container clusters get-credentials $K8S_CLUSTER_NAME
          IMAGE_AND_TAG=gcr.io/fin2you/cash-flow-service:$CIRCLE_SHA1
          kubectl set image deployment/cash-flow-service-production cash-flow-service=$IMAGE_AND_TAG

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - unit-tests
      - integration-tests:
          requires:
            - unit-tests
      - test-coverage:
          requires:
            - integration-tests
      - build-and-registry-container:
          requires:
            - integration-tests
      - deploy-to-production:
          requires:
            - build-and-registry-container
